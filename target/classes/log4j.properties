### Usando 2 appenders, 1 para logar no console, outro para um arquivo
log4j.rootCategory=WARN,stdout,file

# Imprime somente mensagens com \u2018priority\u2019 WARN ou mais alto para o logger
#lembrando a ordem: DEBUG \u2013 INFO \u2013 WARN \u2013 ERROR \u2013 FATAL
log4j.category.lopes=INFO

### O primeiro appender escreve no console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

### Pattern que mostra o nome da classe e numero da linha, porem sem data e hora
log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) \u2013 %m%n

#### O segundo appender escreve em um arquivo e faz um bkp ao atingir o max
log4j.appender.file=org.apache.log4j.rolling.RollingFileAppender

### Caminho e nome do arquivo
log4j.appender.file.File=${catalina.home}/logs/siscca-log.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout

### Pattern que mostra data, hora, nome da classe e numero da linha
log4j.appender.file.layout.ConversionPattern=%d [%t] %5p %c:%L \u2013 %m%n
log4j.appender.file.RollingPolicy=org.apache.log4j.rolling.FixedWindowRollingPolicy

### Formato que e gerado o arquivo de log de backup
log4j.appender.file.RollingPolicy.FileNamePattern=${catalina.home}/logs/siscca-log.%i.log.zip

### Quantidade minima e maxima de backups de arquivo de log quando o log principal atingir o tamanho maximo.
log4j.appender.file.RollingPolicy.MinIndex=1 
log4j.appender.file.RollingPolicy.MaxIndex=10

### Tamanho maximo do arquivo de log (10mb)
log4j.appender.file.TriggeringPolicy.MaxFileSize=10485760
log4j.appender.file.TriggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy